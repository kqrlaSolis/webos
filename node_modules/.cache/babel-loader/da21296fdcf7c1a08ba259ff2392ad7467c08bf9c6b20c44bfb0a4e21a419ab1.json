{"ast":null,"code":"var _jsxFileName = \"/Users/karlasolis/Downloads/Archive/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Importamos React y useState desde 'react'\nimport \"./App.css\"; // Importamos los estilos del archivo App.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Definimos el componente principal App\n\n  const [tasks, setTasks] = useState([{\n    task: \"Learn React\",\n    // Tarea 1\n    description: \"Learn the basics of React\",\n    date: \"Aug-20\",\n    // Descripción de la tarea 1\n    isCompleted: false //TODO: Agregar el codigo para que se pueda marcar como completada\n  }, {\n    task: \"webos\",\n    description: 'con jamon',\n    date: \"Aug-20\",\n    isCompleted: true\n  }]);\n  // useState para manejar la lista de tareas\n  const [newTask, setNewTask] = useState(\"algo\"); // useState para manejar la nueva tarea\n  const [newDescription, setNewDescription] = useState(\"cola\"); // useState para manejar la descripción de la nueva tarea\n  const [editIndex, setEditIndex] = useState(-1);\n  const [newDate, setNewDate] = useState(\"\"); // useState para manejar el índice de la tarea que se está editando, -1 significa que no se está editando porque en JS los índices empiezan en 0\n\n  // Función para manejar el cambio en el input de tarea\n  const handleTaskChange = e => {\n    //e.target.value | Obtiene el valor del input\n    setNewTask(e.target.value); // Actualiza el estado 'newTask' con el valor del input de tarea\n  };\n\n  // Función para manejar el cambio en el input de descripción\n  const handleDescriptionChange = e => {\n    //e.target.value | Obtiene el valor del input\n    setNewDescription(e.target.value); // Actualiza el estado 'newDescription' con el valor del input de descripción\n  };\n  const handleDateChange = e => {\n    setNewDate(e.target.value);\n  };\n\n  // Función para agregar o editar una tarea\n  const handleAddOrEditTask = () => {\n    // Verifica que los campos no estén vacíos\n    if (newTask.trim() !== \"\" && newDescription.trim() !== \"\") {\n      // .trim() elimina los espacios en blanco al inicio y al final de una cadena\n      // Si no estamos editando, agregamos una nueva tarea\n      if (editIndex === -1) {\n        // Agrega la nueva tarea al array de tareas\n        // los tres puntos (...) se utilizan para copiar el array de tareas existente y agregar la nueva tarea al final\n        setTasks([...tasks, {\n          task: newTask,\n          description: newDescription,\n          date: newDate,\n          isCompleted: false\n        }]);\n      } else {\n        // Si estamos editando, actualizamos la tarea existente\n        //.map recorre cada elemento del array y devuelve un nuevo array con los elementos modificados\n        const updatedTasks = tasks.map((item, index) => {\n          if (index === editIndex) {\n            return {\n              task: newTask,\n              description: newDescription,\n              isCompleted: item.isCompleted\n            };\n          } else {\n            return item;\n          }\n        });\n        setTasks(updatedTasks);\n        setEditIndex(-1); // Reiniciamos el índice de edición\n      }\n      setNewTask(\"\"); // Limpia el input de tarea después de agregarla o editarla\n      setNewDescription(\"\"); // Limpia el input de descripción después de agregarla o editarla\n    }\n  };\n\n  // Función para eliminar una tarea\n  const handleDeleteTask = index => {\n    // Filtra las tareas para eliminar la tarea seleccionada. Se utiliza .filter() que crea un nuevo array sin la tarea que queremos eliminar.\n    // filter() recorre cada elemento del array y solo mantiene los elementos que cumplen con la condición especificada.\n    const updatedTasks = tasks.filter((item, i) => i !== index);\n    setTasks(updatedTasks); // Actualiza la lista de tareas sin la tarea eliminada\n  };\n\n  // Función para seleccionar una tarea para editar\n  const handleEditTask = loquequieras => {\n    setEditIndex(loquequieras); // Establece el índice de la tarea que se va a editar\n    setNewTask(tasks[loquequieras].task); // Llena el input de tarea con el valor de la tarea seleccionada\n    setNewDescription(tasks[loquequieras].description); // Llena el input de descripción con el valor de la descripción seleccionada\n  };\n\n  // Función para marcar una tarea como completada\n  const handleToggleComplete = index => {\n    const updatedList = tasks.map((tarea, posicion) => {\n      if (posicion !== index) return tarea;\n      console.log(posicion, tarea);\n      return {\n        task: tarea.task,\n        // Tarea 1\n        description: tarea.description,\n        // Descripción de la tarea 1\n        isCompleted: !tarea.isCompleted\n      };\n    });\n    console.log(updatedList);\n    setTasks(updatedList);\n\n    // Queremos actualizar la lista de tareas cuando se marca una tarea como completada.\n    // Primero, usamos el método map para crear una nueva lista de tareas. ¿Recuerdas cómo funciona el método map?\n    //TODO: Agregar el código para marcar una tarea como completada\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", editIndex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: handleTaskChange,\n        placeholder: \"Add or edit task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDescription,\n        onChange: handleDescriptionChange,\n        placeholder: \"Add or edit description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: newDate,\n        onChange: handleDateChange,\n        placeholder: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary\",\n        onClick: handleAddOrEditTask,\n        children: editIndex === -1 ? \"Add Task\" : \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"webos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.isCompleted ? 'ok' : 'no ok'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: item.isCompleted ? 'warn' : 'success',\n                onClick: () => handleToggleComplete(i),\n                children: item.isCompleted ? 'Undo' : 'Complete'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"primary\",\n                onClick: () => handleEditTask(i),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"danger\",\n                onClick: () => handleDeleteTask(i),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"webos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N8rLUpI1IvMsxzPCqOLkB+jFCwM=\");\n_c = App;\nexport default App; // Exportamos el componente App para que pueda ser usado en otros archivos\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","task","description","date","isCompleted","newTask","setNewTask","newDescription","setNewDescription","editIndex","setEditIndex","newDate","setNewDate","handleTaskChange","e","target","value","handleDescriptionChange","handleDateChange","handleAddOrEditTask","trim","updatedTasks","map","item","index","handleDeleteTask","filter","i","handleEditTask","loquequieras","handleToggleComplete","updatedList","tarea","posicion","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/karlasolis/Downloads/Archive/src/App.js"],"sourcesContent":["import React, { useState } from \"react\"; // Importamos React y useState desde 'react'\nimport \"./App.css\"; // Importamos los estilos del archivo App.css\n\nfunction App() {\n  // Definimos el componente principal App\n\n  const [tasks, setTasks] = useState([\n    {\n      task: \"Learn React\", // Tarea 1\n      description: \"Learn the basics of React\",\n      date: \"Aug-20\",// Descripción de la tarea 1\n      isCompleted: false, //TODO: Agregar el codigo para que se pueda marcar como completada\n    },\n    {\n      task: \"webos\",\n      description: 'con jamon',\n      date: \"Aug-20\",\n      isCompleted: true,\n    }\n  ]); \n  // useState para manejar la lista de tareas\n  const [newTask, setNewTask] = useState(\"algo\"); // useState para manejar la nueva tarea\n  const [newDescription, setNewDescription] = useState(\"cola\"); // useState para manejar la descripción de la nueva tarea\n  const [editIndex, setEditIndex] = useState(-1);\n  const [newDate, setNewDate] = useState(\"\"); // useState para manejar el índice de la tarea que se está editando, -1 significa que no se está editando porque en JS los índices empiezan en 0\n\n  // Función para manejar el cambio en el input de tarea\n  const handleTaskChange = (e) => {\n    //e.target.value | Obtiene el valor del input\n    setNewTask(e.target.value); // Actualiza el estado 'newTask' con el valor del input de tarea\n  };\n\n  // Función para manejar el cambio en el input de descripción\n  const handleDescriptionChange = (e) => {\n    //e.target.value | Obtiene el valor del input\n    setNewDescription(e.target.value); // Actualiza el estado 'newDescription' con el valor del input de descripción\n  };\n\n\n  const handleDateChange = (e) => {\n\n    setNewDate(e.target.value);\n  };\n\n\n\n\n\n\n\n\n  // Función para agregar o editar una tarea\n  const handleAddOrEditTask = () => {\n    // Verifica que los campos no estén vacíos\n    if (newTask.trim() !== \"\" && newDescription.trim() !== \"\") {\n      // .trim() elimina los espacios en blanco al inicio y al final de una cadena\n      // Si no estamos editando, agregamos una nueva tarea\n      if (editIndex === -1) {\n        // Agrega la nueva tarea al array de tareas\n        // los tres puntos (...) se utilizan para copiar el array de tareas existente y agregar la nueva tarea al final\n        setTasks([...tasks, { task: newTask, description: newDescription, date:newDate, isCompleted:false }]);\n      } else {\n        // Si estamos editando, actualizamos la tarea existente\n        //.map recorre cada elemento del array y devuelve un nuevo array con los elementos modificados\n        const updatedTasks = tasks.map((item, index) => {\n          if (index === editIndex) {\n            return { task: newTask, description: newDescription, isCompleted:item.isCompleted};\n          } else {\n            return item;\n          }\n        });\n        setTasks(updatedTasks);\n        setEditIndex(-1); // Reiniciamos el índice de edición\n      }\n      setNewTask(\"\"); // Limpia el input de tarea después de agregarla o editarla\n      setNewDescription(\"\"); // Limpia el input de descripción después de agregarla o editarla\n    }\n  };\n\n  // Función para eliminar una tarea\n  const handleDeleteTask = (index) => {\n    // Filtra las tareas para eliminar la tarea seleccionada. Se utiliza .filter() que crea un nuevo array sin la tarea que queremos eliminar.\n    // filter() recorre cada elemento del array y solo mantiene los elementos que cumplen con la condición especificada.\n    const updatedTasks = tasks.filter((item, i) => i !== index);\n    setTasks(updatedTasks); // Actualiza la lista de tareas sin la tarea eliminada\n  };\n\n  // Función para seleccionar una tarea para editar\n  const handleEditTask = (loquequieras) => {\n    setEditIndex(loquequieras); // Establece el índice de la tarea que se va a editar\n    setNewTask(tasks[loquequieras].task); // Llena el input de tarea con el valor de la tarea seleccionada\n    setNewDescription(tasks[loquequieras].description); // Llena el input de descripción con el valor de la descripción seleccionada\n  };\n\n  // Función para marcar una tarea como completada\n  const handleToggleComplete = (index) => {\n    const updatedList = tasks.map((tarea,posicion)=> {\n      if (posicion !== index) return tarea;\n      console.log(posicion, tarea);\n      return {\n        task:tarea.task, // Tarea 1\n        description:tarea.description, // Descripción de la tarea 1\n        isCompleted:!tarea.isCompleted, \n      }\n    })\n    console.log(updatedList);\n    setTasks(updatedList);\n    \n\n    // Queremos actualizar la lista de tareas cuando se marca una tarea como completada.\n    // Primero, usamos el método map para crear una nueva lista de tareas. ¿Recuerdas cómo funciona el método map?\n    //TODO: Agregar el código para marcar una tarea como completada\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Contenedor principal */}\n      <header className=\"App-header\">\n        {/* Encabezado de la aplicación */}\n        <h1>ToDo List</h1>\n        <h2> { editIndex }</h2>\n\n        {/* Input para agregar o editar una tarea */}\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={handleTaskChange}\n          placeholder=\"Add or edit task\"\n        />\n\n        {/* Input para agregar o editar la descripción de una tarea */}\n        <input\n          type=\"text\"\n          value={newDescription}\n          onChange={handleDescriptionChange}\n          placeholder=\"Add or edit description\"\n        />\n\n        <input\n          type=\"date\"\n          value={newDate}\n          onChange={handleDateChange}\n          placeholder=\"Date\"\n          />\n\n\n        {/* Botón para agregar o editar la tarea */}\n        <button className=\"primary\" onClick={handleAddOrEditTask}>\n          {editIndex === -1 ? \"Add Task\" : \"Update Task\"}\n        </button>\n\n        {/* Tabla para mostrar la lista de tareas */}\n        <table>\n          <thead>\n            <tr>\n              <th>#</th> {/* Columna para el número de tarea */}\n              <th>Task</th> {/* Columna para la descripción de la tarea */}\n              <th>Description</th>\n              <th>Date</th>\n              {/* Columna para la descripción de la tarea */}\n              <th>Completed</th> {/* Columna para la descripción de la tarea */}\n              <th>Actions</th>\n              <th>webos</th>\n              {/* Columna para las acciones de editar o eliminar */}\n            </tr>\n          </thead>\n          <tbody>\n            {/* Mapeamos las tareas para mostrarlas en la tabla */}\n            {tasks.map((item, i) => (\n              <tr key={i}>\n                <td>{i}</td> {/* Muestra el número de tarea */}\n                <td>{item.task}</td> {/* Muestra la descripción de la tarea */}\n                <td>{item.description}</td>\n                <td>{item.date}</td>\n                {/* Muestra la descripción de la tarea */}\n                {/*TODO: Agregar otro <td></td> para mostrar si esta completada la tarea */}\n                <td>{item.isCompleted ? 'ok' : 'no ok'}</td>\n                <td>\n                  {/* Botón para marcar una tarea como completada */}\n                  <button className= {item.isCompleted ? 'warn' : 'success'}  onClick={() => handleToggleComplete(i)}>\n                    {\n                      item.isCompleted ? 'Undo' : 'Complete'\n                    }\n                  </button>\n                  {/* Botón para editar la tarea */}\n                  <button className=\"primary\" onClick={() => handleEditTask(i)}>Edit</button>\n                  {/* Botón para eliminar la tarea */}\n                  <button className=\"danger\" onClick={() => handleDeleteTask(i)}>\n                    Delete\n                  </button>\n                </td>\n                <td>webos</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </header>\n    </div>\n  );\n}\n\nexport default App; // Exportamos el componente App para que pueda ser usado en otros archivos\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}